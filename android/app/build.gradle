def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}
//リリース用に追加
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
//    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")DELETE
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")//ADD

}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '3'//localProperties.getPropertyを参照
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.1.1'//localProperties.getPropertyを参照
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'//RE-ADD20220623

android {
//    compileSdkVersion flutter.compileSdkVersion
    compileSdkVersion 32
//    buildToolsVersion "32.0.0"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.app.convas"
//        minSdkVersion flutter.minSdkVersion

        minSdkVersion 28
        targetSdkVersion 32
//        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true // これを追加
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

//    buildTypes {
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//
////リリース用に削除
//            //signingConfig signingConfigs.debug
//
////リリース用に追加
//            signingConfig signingConfigs.release
//        }
//    }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.

            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            resValue "string", "app_name", "convas"
        }
        debug {
            // TODO: Add your own signing config for the release build.

            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            resValue "string", "app_name", "convas"
        }
    }

//    buildTypes {
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig signingConfigs.debug
//        }
//    }

}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:29.1.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.android.support:multidex:1.0.3'//RE-ADD20220623
    implementation "com.algolia:algoliasearch-client-kotlin:$kotlin_client_version"
    implementation "io.ktor:ktor-client-okhttp:$ktor_version"
}
